# This workflow will do a clean install of node dependencies, build the sample web ui in a docker container and run tests on the ui isolated from mps and rps
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install cypress
      - run: docker build . --file Dockerfile --tag vprodemo.azurecr.ui/samplewebui:latest
      - run: docker run -d -p 4200:80 vprodemo.azurecr.ui/samplewebui:latest
      - run: npm run cy-runner
      - name: Upload Cypress UI Test Results
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: sample-web-ui-ui-test
          path: cypress-ui-test-output-*.xml
      - name: Upload Cypress UI Images
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        if: always()
        with:
          name: sample-web-ui-ui-test-screenshots
          path: /home/runner/work/sample-web-ui/sample-web-ui/cypress/screenshots/**/*.png
