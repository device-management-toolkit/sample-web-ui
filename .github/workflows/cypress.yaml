# This workflow will do a clean install of node dependencies, build the sample web ui in a docker container and run tests on the ui isolated from mps and rps
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install cypress
      - run: docker build . --file Dockerfile --tag vprodemo.azurecr.ui/samplewebui:latest
      - run: docker run -d -p 4200:80 vprodemo.azurecr.ui/samplewebui:latest
      - run: npm run cy-runner
      - name: Upload Cypress UI Test Results
        uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9 # v4.4.1
        with:
          name: sample-web-ui-ui-test
          path: cypress-ui-test-output-*.xml
      - name: Upload Cypress UI Images
        uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9 # v4.4.1
        if: always()
        with:
          name: sample-web-ui-ui-test-screenshots
          path: /home/runner/work/sample-web-ui/sample-web-ui/cypress/screenshots/**/*.png
